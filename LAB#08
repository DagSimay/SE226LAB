from plistlib import loads


class ArchiveItem:
    def __init__(self,uid,title,year):
        self.uid = uid
        self.title =title
        self.year = int(year)

    def __str__(self):
        return f"{self.uid}, {self.title}, {self.year}"

    def __eq__(self, other):
        return self.uid == other.uid

    def is_recent(self,n):
        return self.year >= (2025 - n)

class Book(ArchiveItem):
    def __init__(self,uid,title,year,author,pages):
        super().__init__(uid,title, year)
        self.author = author
        self.pages = int(pages)


    def __str__(self):
        return f"BOOK -> UID:{self.uid},Title: {self.title},Year: {self.year},Author:  {self.author},Pages: {self.pages}"


class Article(ArchiveItem):
    def __init__(self, uid,title,year,journal, doi):
        super().__init__(uid,title, year)
        self.journal = journal
        self. doi = doi


    def __str__(self):
        return f"ARTICLE -> UID: {self.uid}, Title{self.title}, Year: {self.year}, Journal: {self.journal}, Doi: {self.doi}"


class Podcast(ArchiveItem):
    def __init__(self, uid, title, year, host, duration):
        super().__init__(uid, title, year)
        self.host = host
        self.duration = int(duration)

    def __str__(self):
        return f"PODCAST -> UID: {self.uid}, Title{self.title}, Year: {self.year}, Host:{self.host}, Duration: {self.duration} mins"


def save_to_file (items, filename):
    with open(filename, 'w') as f:
        for item in items:
            if isinstance(item, Book):
                f.write(str(item) + "/n")

            elif isinstance(item, Article):
                f.write(str(item) + "/n")

            elif isinstance(item, Podcast):
                f.write(str(item) + "/n")


def load_from_file(filename):
    items = []
    with open(filename, "r") as f:
        for line in f:
            parts = line.strip().split(',')
            type = parts[0]

            if type == "Book":
                items.append(Book(*parts[1:]))

            elif type == "Article":
                items.append(Article(*parts[1:]))

            elif type == "Podcast":
                items.append(Podcast(*parts[1:]))
    return items


items  = [
    Book("B001","Deep Learning","2018","Ian Goodfellow","775"),
    Book("B002", "AI", "2013", "Zeynep Simay Dag", "1100"),
    Article("A001","Article1", "2022", "Journal1", "https://doi.org/10.3141/2571-02"),
    Article("A002", "Article2", "2000", "Journal2", "https://doi.org/10.3141/2571-05"),
    Podcast("P001","Meksika Açmazı","2025", "Spotify",45),
    Podcast("P002", "Anlatamadım", "2025", "Karnaval Radyo", 43)


]

save_to_file(items, "archieve.txt")
loaded_items = load_from_file("archieve.txt")

for item in loaded_items:
    print(item)

print ("\nRecent Items:")
for item in loaded_items:
    if item.is_recent(5):
        print(item)
